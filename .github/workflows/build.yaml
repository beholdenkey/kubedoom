---
name: Build and Push Kubedoom

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:

env:
  DOCKERHUB_SLUG: beholdenkey/kubedoom
  GHCR_SLUG: ghcr.io/beholdenkey/kubedoom
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  prepare:
    name: Prepare Build Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker Base Layer
        uses: docker/bake-action@v4
        with:
          targets: base
          set: |
            *.platform=${{ env.PLATFORMS }}
            *.cache-from=type=gha,scope=base
            *.cache-to=type=gha,scope=base,mode=max

  build-and-push:
    name: Build and Push Kubedoom
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Remove Unused Software
        run: sudo rm -rf /usr/share/dotnet

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate Docker Tags
        id: tags
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const os = require('os');
            const tags = ["latest", "v${{ github.run_number }}"];
            return tags.join(os.EOL);

      - name: Generate Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_SLUG }}
            ${{ env.GHCR_SLUG }}
          tags: ${{ steps.tags.outputs.result }}
          labels: |
            org.opencontainers.image.title=kubedoom
            org.opencontainers.image.vendor=Beholdenkey

      - name: Login to GHCR
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Kubedoom Image
        uses: docker/bake-action@v4
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: image
          set: |
            *.platform=${{ env.PLATFORMS }}
            *.cache-from=type=gha,scope=base
          push: ${{ startsWith(github.ref, 'refs/tags/v') }}
