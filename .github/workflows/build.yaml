---
name: Build and Push Kubedoom

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:

env:
  DOCKERHUB_SLUG: beholdenkey/kubedoom
  GHCR_SLUG: ghcr.io/beholdenkey/kubedoom
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      targets: ${{ steps.generate.outputs.targets }}
    steps:
      - uses: actions/checkout@v4
      - name: List targets
        id: generate
        uses: docker/bake-action/subaction/list-targets@v4
        with:
          config: ./docker-bake.hcl # Ensure you specify your docker-bake.hcl path

  validate:
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJson(needs.prepare.outputs.targets) }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Validate Targets
        uses: docker/bake-action@v4
        with:
          targets: ${{ matrix.target }}
          set: |
            *.platform=${{ env.PLATFORMS }}
            *.cache-from=type=gha,scope=base
            *.cache-to=type=gha,scope=base,mode=max

  build-and-push:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: sudo rm -rf /usr/share/dotnet
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Generate Docker Tags
        id: tags
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const os = require('os');
            const tags = ["latest", "v${{ github.run_number }}"];
            return tags.join(os.EOL);
      - name: Generate Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKERHUB_SLUG }}, ${{ env.GHCR_SLUG }}
          tags: ${{ steps.tags.outputs.result }}
      - name: Login to Docker Registry
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Image
        uses: docker/bake-action@v4
        with:
          files: ./docker-bake.hcl
          targets: image
          set: |
            *.platform=${{ env.PLATFORMS }}
            *.cache-from=type=gha,scope=base
            *.push=${{ startsWith(github.ref, 'refs/tags/v') }}
